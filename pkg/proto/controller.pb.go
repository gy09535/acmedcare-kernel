// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/controller.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RequestDto struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestDto) Reset()         { *m = RequestDto{} }
func (m *RequestDto) String() string { return proto.CompactTextString(m) }
func (*RequestDto) ProtoMessage()    {}
func (*RequestDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_c8f4e52e42c22790, []int{0}
}

func (m *RequestDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestDto.Unmarshal(m, b)
}
func (m *RequestDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestDto.Marshal(b, m, deterministic)
}
func (m *RequestDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestDto.Merge(m, src)
}
func (m *RequestDto) XXX_Size() int {
	return xxx_messageInfo_RequestDto.Size(m)
}
func (m *RequestDto) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestDto.DiscardUnknown(m)
}

var xxx_messageInfo_RequestDto proto.InternalMessageInfo

func (m *RequestDto) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type ResultDto struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResultDto) Reset()         { *m = ResultDto{} }
func (m *ResultDto) String() string { return proto.CompactTextString(m) }
func (*ResultDto) ProtoMessage()    {}
func (*ResultDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_c8f4e52e42c22790, []int{1}
}

func (m *ResultDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultDto.Unmarshal(m, b)
}
func (m *ResultDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultDto.Marshal(b, m, deterministic)
}
func (m *ResultDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultDto.Merge(m, src)
}
func (m *ResultDto) XXX_Size() int {
	return xxx_messageInfo_ResultDto.Size(m)
}
func (m *ResultDto) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultDto.DiscardUnknown(m)
}

var xxx_messageInfo_ResultDto proto.InternalMessageInfo

func (m *ResultDto) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type ServiceDto struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Ip                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Por                  string   `protobuf:"bytes,3,opt,name=por,proto3" json:"por,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceDto) Reset()         { *m = ServiceDto{} }
func (m *ServiceDto) String() string { return proto.CompactTextString(m) }
func (*ServiceDto) ProtoMessage()    {}
func (*ServiceDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_c8f4e52e42c22790, []int{2}
}

func (m *ServiceDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceDto.Unmarshal(m, b)
}
func (m *ServiceDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceDto.Marshal(b, m, deterministic)
}
func (m *ServiceDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceDto.Merge(m, src)
}
func (m *ServiceDto) XXX_Size() int {
	return xxx_messageInfo_ServiceDto.Size(m)
}
func (m *ServiceDto) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceDto.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceDto proto.InternalMessageInfo

func (m *ServiceDto) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ServiceDto) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *ServiceDto) GetPor() string {
	if m != nil {
		return m.Por
	}
	return ""
}

func init() {
	proto.RegisterType((*RequestDto)(nil), "com.acmedcare.framework.starter.control.protobuf.RequestDto")
	proto.RegisterType((*ResultDto)(nil), "com.acmedcare.framework.starter.control.protobuf.ResultDto")
	proto.RegisterType((*ServiceDto)(nil), "com.acmedcare.framework.starter.control.protobuf.ServiceDto")
}

func init() { proto.RegisterFile("proto/controller.proto", fileDescriptor_c8f4e52e42c22790) }

var fileDescriptor_c8f4e52e42c22790 = []byte{
	// 279 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x52, 0xb1, 0x4e, 0xc3, 0x30,
	0x14, 0xac, 0xd3, 0x40, 0xe9, 0x43, 0x42, 0x95, 0x07, 0x14, 0x31, 0x55, 0x96, 0x90, 0x98, 0x0c,
	0x82, 0x11, 0x16, 0x42, 0x17, 0x26, 0xaa, 0xf0, 0x05, 0xae, 0xfb, 0x02, 0x51, 0x93, 0xd8, 0x3c,
	0x3b, 0xe5, 0x03, 0x40, 0xe2, 0x77, 0xf8, 0x44, 0x14, 0x37, 0xa5, 0x73, 0xdb, 0xa1, 0xdb, 0xf9,
	0x7c, 0xf7, 0x74, 0x27, 0x1d, 0x9c, 0x5b, 0x32, 0xde, 0x5c, 0x6b, 0x53, 0x7b, 0x32, 0x65, 0x89,
	0x24, 0x03, 0xc1, 0x6f, 0xb4, 0xa9, 0xa4, 0xd2, 0x15, 0xce, 0xb5, 0x22, 0x94, 0x39, 0xa9, 0x0a,
	0x3f, 0x0d, 0x2d, 0xa4, 0xf3, 0x8a, 0x3c, 0x92, 0xec, 0x1c, 0x2b, 0xf9, 0xac, 0xc9, 0xc5, 0x18,
	0x20, 0xc3, 0x8f, 0x06, 0x9d, 0x9f, 0x78, 0xc3, 0x39, 0xc4, 0x73, 0xe5, 0x55, 0xc2, 0xc6, 0xec,
	0x6a, 0x98, 0x05, 0x2c, 0x2e, 0x61, 0x98, 0xa1, 0x6b, 0xca, 0x20, 0x48, 0x60, 0xe0, 0x1a, 0xad,
	0xd1, 0xb9, 0xa0, 0x39, 0xc9, 0xd6, 0x4f, 0x91, 0x02, 0xbc, 0x22, 0x2d, 0x0b, 0x8d, 0xdd, 0xa1,
	0x5a, 0x55, 0xb8, 0x3e, 0xd4, 0x62, 0x7e, 0x06, 0x51, 0x61, 0x93, 0x28, 0x30, 0x51, 0x61, 0xf9,
	0x08, 0xfa, 0xd6, 0x50, 0xd2, 0x0f, 0x44, 0x0b, 0x6f, 0x7f, 0x63, 0x18, 0x4d, 0x70, 0xf9, 0x62,
	0xdd, 0xd3, 0x7f, 0x33, 0xfe, 0xcd, 0xe0, 0x48, 0xbf, 0xa3, 0x5e, 0xf0, 0x07, 0xb9, 0x6d, 0x3d,
	0xb9, 0xe9, 0x76, 0x71, 0xbf, 0x8b, 0xbb, 0xeb, 0x2d, 0x7a, 0x21, 0x46, 0x10, 0x1e, 0x36, 0xc6,
	0x17, 0x83, 0xd8, 0x79, 0x63, 0x0f, 0x9b, 0xe2, 0x87, 0xc1, 0xe0, 0x0d, 0xfd, 0x73, 0x9d, 0x9b,
	0x3d, 0x83, 0xec, 0xe0, 0xde, 0xcc, 0x4c, 0xf4, 0xd2, 0x47, 0xd8, 0x7a, 0xf3, 0xe9, 0xe9, 0x6a,
	0x63, 0xd3, 0xf6, 0x3d, 0x65, 0xb3, 0xe3, 0xf0, 0x71, 0xf7, 0x17, 0x00, 0x00, 0xff, 0xff, 0xf5,
	0x85, 0xc6, 0x0f, 0x55, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DevOpsControllerClient is the client API for DevOpsController service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DevOpsControllerClient interface {
	// Sends a greeting
	Check(ctx context.Context, in *RequestDto, opts ...grpc.CallOption) (*ResultDto, error)
	Start(ctx context.Context, in *RequestDto, opts ...grpc.CallOption) (*ResultDto, error)
	Stop(ctx context.Context, in *RequestDto, opts ...grpc.CallOption) (*ResultDto, error)
	GetInfo(ctx context.Context, in *RequestDto, opts ...grpc.CallOption) (*ServiceDto, error)
}

type devOpsControllerClient struct {
	cc *grpc.ClientConn
}

func NewDevOpsControllerClient(cc *grpc.ClientConn) DevOpsControllerClient {
	return &devOpsControllerClient{cc}
}

func (c *devOpsControllerClient) Check(ctx context.Context, in *RequestDto, opts ...grpc.CallOption) (*ResultDto, error) {
	out := new(ResultDto)
	err := c.cc.Invoke(ctx, "/com.acmedcare.framework.starter.control.protobuf.DevOpsController/check", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devOpsControllerClient) Start(ctx context.Context, in *RequestDto, opts ...grpc.CallOption) (*ResultDto, error) {
	out := new(ResultDto)
	err := c.cc.Invoke(ctx, "/com.acmedcare.framework.starter.control.protobuf.DevOpsController/start", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devOpsControllerClient) Stop(ctx context.Context, in *RequestDto, opts ...grpc.CallOption) (*ResultDto, error) {
	out := new(ResultDto)
	err := c.cc.Invoke(ctx, "/com.acmedcare.framework.starter.control.protobuf.DevOpsController/stop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devOpsControllerClient) GetInfo(ctx context.Context, in *RequestDto, opts ...grpc.CallOption) (*ServiceDto, error) {
	out := new(ServiceDto)
	err := c.cc.Invoke(ctx, "/com.acmedcare.framework.starter.control.protobuf.DevOpsController/getInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DevOpsControllerServer is the server API for DevOpsController service.
type DevOpsControllerServer interface {
	// Sends a greeting
	Check(context.Context, *RequestDto) (*ResultDto, error)
	Start(context.Context, *RequestDto) (*ResultDto, error)
	Stop(context.Context, *RequestDto) (*ResultDto, error)
	GetInfo(context.Context, *RequestDto) (*ServiceDto, error)
}

// UnimplementedDevOpsControllerServer can be embedded to have forward compatible implementations.
type UnimplementedDevOpsControllerServer struct {
}

func (*UnimplementedDevOpsControllerServer) Check(ctx context.Context, req *RequestDto) (*ResultDto, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Check not implemented")
}
func (*UnimplementedDevOpsControllerServer) Start(ctx context.Context, req *RequestDto) (*ResultDto, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Start not implemented")
}
func (*UnimplementedDevOpsControllerServer) Stop(ctx context.Context, req *RequestDto) (*ResultDto, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stop not implemented")
}
func (*UnimplementedDevOpsControllerServer) GetInfo(ctx context.Context, req *RequestDto) (*ServiceDto, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInfo not implemented")
}

func RegisterDevOpsControllerServer(s *grpc.Server, srv DevOpsControllerServer) {
	s.RegisterService(&_DevOpsController_serviceDesc, srv)
}

func _DevOpsController_Check_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestDto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevOpsControllerServer).Check(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.acmedcare.framework.starter.control.protobuf.DevOpsController/Check",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevOpsControllerServer).Check(ctx, req.(*RequestDto))
	}
	return interceptor(ctx, in, info, handler)
}

func _DevOpsController_Start_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestDto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevOpsControllerServer).Start(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.acmedcare.framework.starter.control.protobuf.DevOpsController/Start",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevOpsControllerServer).Start(ctx, req.(*RequestDto))
	}
	return interceptor(ctx, in, info, handler)
}

func _DevOpsController_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestDto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevOpsControllerServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.acmedcare.framework.starter.control.protobuf.DevOpsController/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevOpsControllerServer).Stop(ctx, req.(*RequestDto))
	}
	return interceptor(ctx, in, info, handler)
}

func _DevOpsController_GetInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestDto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevOpsControllerServer).GetInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.acmedcare.framework.starter.control.protobuf.DevOpsController/GetInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevOpsControllerServer).GetInfo(ctx, req.(*RequestDto))
	}
	return interceptor(ctx, in, info, handler)
}

var _DevOpsController_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.acmedcare.framework.starter.control.protobuf.DevOpsController",
	HandlerType: (*DevOpsControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "check",
			Handler:    _DevOpsController_Check_Handler,
		},
		{
			MethodName: "start",
			Handler:    _DevOpsController_Start_Handler,
		},
		{
			MethodName: "stop",
			Handler:    _DevOpsController_Stop_Handler,
		},
		{
			MethodName: "getInfo",
			Handler:    _DevOpsController_GetInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/controller.proto",
}
